{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedWithChildren = Object.getPrototypeOf(_reactNative.Animated.ValueXY);\n\nif (__DEV__) {\n  if (AnimatedWithChildren.name !== 'AnimatedWithChildren') {\n    console.error('AnimatedCoordinatesArray could not obtain AnimatedWithChildren base class');\n  }\n}\n\nvar AnimatedCoordinatesArray = function (_AnimatedWithChildren) {\n  (0, _inherits2.default)(AnimatedCoordinatesArray, _AnimatedWithChildren);\n\n  var _super = _createSuper(AnimatedCoordinatesArray);\n\n  function AnimatedCoordinatesArray(coordinatesArray) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedCoordinatesArray);\n    _this = _super.call(this);\n    _this.coordinatesArray = coordinatesArray.map(function (coord) {\n      return (0, _toConsumableArray2.default)(coord);\n    });\n    _this.progressValue = new _reactNative.Animated.Value(0.0);\n\n    _this.progressValue.__addChild((0, _assertThisInitialized2.default)(_this));\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedCoordinatesArray, [{\n    key: \"createCoordinatesAnimator\",\n    value: function createCoordinatesAnimator(toValue, actCoords) {\n      var newCoords = toValue.map(function (coord) {\n        return (0, _toConsumableArray2.default)(coord);\n      });\n      return {\n        coords: newCoords,\n        calculate: function calculate(progress, origCoords) {\n          var newF = progress;\n          var origF = 1.0 - newF;\n          var nextCoords = this.coords;\n          var commonLen = Math.min(origCoords.length, newCoords.length);\n          var common = origCoords.slice(0, commonLen).map(function (origCoord, i) {\n            return [origCoord[0] * origF + newCoords[i][0] * newF, origCoord[1] * origF + newCoords[i][1] * newF];\n          });\n\n          if (nextCoords.length > origCoords.length) {\n            var addingOrig = origCoords.length > 0 ? origCoords[origCoords.length - 1] : nextCoords[0];\n            var adding = nextCoords.slice(commonLen, nextCoords.length).map(function (newCoord) {\n              return [addingOrig[0] * origF + newCoord[0] * newF, addingOrig[1] * origF + newCoord[1] * newF];\n            });\n            return [].concat((0, _toConsumableArray2.default)(common), (0, _toConsumableArray2.default)(adding));\n          }\n\n          if (origCoords.length > nextCoords.length) {\n            var dissapearingNew = nextCoords.length > 0 ? nextCoords[nextCoords.length - 1] : origCoords[0];\n            var dissapearing = origCoords.slice(commonLen, origCoords.length).map(function (origCoord) {\n              return [origCoord[0] * origF + dissapearingNew[0] * newF, origCoord[1] * origF + dissapearingNew[1] * newF];\n            });\n            return [].concat((0, _toConsumableArray2.default)(common), (0, _toConsumableArray2.default)(dissapearing));\n          }\n\n          return common;\n        }\n      };\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(progressAnimation, config) {\n      var _this2 = this;\n\n      var toValue = config.toValue;\n\n      var onAnimationStart = function onAnimationStart(animation) {\n        if (_this2.coordAnimator) {\n          var actProgress = _this2.progressValue.__getValue();\n\n          _this2.animation.stop();\n\n          _this2.progressValue.setValue(0.0);\n\n          _this2.coordinatesArray = _this2.coordAnimator.calculate(actProgress, _this2.coordinatesArray);\n          _this2.coordAnimator = null;\n          _this2.animation = null;\n        }\n\n        _this2.animation = animation;\n        _this2.coordAnimator = _this2.createCoordinatesAnimator(toValue, _this2.coordinatesArray);\n      };\n\n      var origAnimationStart = progressAnimation.start;\n      var newAnimation = progressAnimation;\n\n      newAnimation.start = function start() {\n        onAnimationStart(progressAnimation);\n        origAnimationStart.apply(void 0, arguments);\n      };\n\n      return newAnimation;\n    }\n  }, {\n    key: \"timing\",\n    value: function timing(config) {\n      return this.animate(_reactNative.Animated.timing(this.progressValue, _objectSpread({}, config, {\n        toValue: 1.0\n      })), config);\n    }\n  }, {\n    key: \"spring\",\n    value: function spring(config) {\n      return this.animate(_reactNative.Animated.spring(this.progressValue, _objectSpread({}, config, {\n        toValue: 1.0\n      })), config);\n    }\n  }, {\n    key: \"decay\",\n    value: function decay(config) {\n      return this.animate(_reactNative.Animated.decay(this.progressValue, _objectSpread({}, config, {\n        toValue: 1.0\n      })), config);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      if (!this.coordAnimator) {\n        return this.coordinatesArray.map(function (coord) {\n          return [coord[0], coord[1]];\n        });\n      }\n\n      return this.coordAnimator.calculate(this.progressValue.__getValue(), this.coordinatesArray);\n    }\n  }]);\n  return AnimatedCoordinatesArray;\n}(AnimatedWithChildren);\n\nvar _default = AnimatedCoordinatesArray;\nexports.default = _default;","map":{"version":3,"sources":["/Users/angelaranibar/Erick/ParqueosCochalosMovil-master/Movil/ParqueosCochalos/node_modules/@react-native-mapbox-gl/maps/javascript/utils/animated/AnimatedCoordinatesArray.js"],"names":["AnimatedWithChildren","Object","getPrototypeOf","Animated","ValueXY","__DEV__","name","console","error","AnimatedCoordinatesArray","coordinatesArray","map","coord","progressValue","Value","__addChild","toValue","actCoords","newCoords","coords","calculate","progress","origCoords","newF","origF","nextCoords","commonLen","Math","min","length","common","slice","origCoord","i","addingOrig","adding","newCoord","dissapearingNew","dissapearing","progressAnimation","config","onAnimationStart","animation","coordAnimator","actProgress","__getValue","stop","setValue","createCoordinatesAnimator","origAnimationStart","start","newAnimation","animate","timing","spring","decay"],"mappings":"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","sourcesContent":["import {Animated} from 'react-native';\n\n/* eslint-disable guard-for-in */\n\n// see\n// https://github.com/facebook/react-native/blob/master/Libraries/Animated/src/nodes/AnimatedWithChildren.js\nconst AnimatedWithChildren = Object.getPrototypeOf(Animated.ValueXY);\nif (__DEV__) {\n  if (AnimatedWithChildren.name !== 'AnimatedWithChildren') {\n    console.error(\n      'AnimatedCoordinatesArray could not obtain AnimatedWithChildren base class',\n    );\n  }\n}\n\nclass AnimatedCoordinatesArray extends AnimatedWithChildren {\n  constructor(coordinatesArray) {\n    super();\n\n    this.coordinatesArray = coordinatesArray.map(coord => [...coord]);\n\n    // progressValue is a 0->1 value describing the animation\n    this.progressValue = new Animated.Value(0.0);\n    this.progressValue.__addChild(this);\n  }\n\n  /**\n   * @typedef {Object} CoordinatesAnimator\n   *\n   * @property {function} calculate - Calculate new coordinates based on progres: a nubmer\n   *   between 0-1 specifying where the animation is, and origCoords the starting coordinates.\n   */\n\n\n  /**\n   * Subclasses can override to implement different animations.\n   *\n   * @param {*} toValue - to value from animate\n   * @param {*} actCoords - the current coordinates array to start from\n   * @returns {CoordinatesAnimator}\n   */\n  createCoordinatesAnimator(toValue, actCoords) {\n    const newCoords = toValue.map(coord => [...coord]);\n    return {\n      coords: newCoords,\n      calculate(progress, origCoords) {\n        const newF = progress;\n        const origF = 1.0 - newF;\n        const nextCoords = this.coords;\n\n        // common\n        const commonLen = Math.min(origCoords.length, newCoords.length);\n        const common = origCoords\n          .slice(0, commonLen)\n          .map((origCoord, i) => [\n            origCoord[0] * origF + newCoords[i][0] * newF,\n            origCoord[1] * origF + newCoords[i][1] * newF,\n          ]);\n\n        if (nextCoords.length > origCoords.length) {\n          // only in new (adding)\n          const addingOrig =\n            origCoords.length > 0\n              ? origCoords[origCoords.length - 1]\n              : nextCoords[0];\n          const adding = nextCoords\n            .slice(commonLen, nextCoords.length)\n            .map(newCoord => [\n              addingOrig[0] * origF + newCoord[0] * newF,\n              addingOrig[1] * origF + newCoord[1] * newF,\n            ]);\n          return [...common, ...adding];\n        }\n\n        if (origCoords.length > nextCoords.length) {\n          // only in orig (dissapearing)\n          const dissapearingNew =\n            nextCoords.length > 0\n              ? nextCoords[nextCoords.length - 1]\n              : origCoords[0];\n          const dissapearing = origCoords\n            .slice(commonLen, origCoords.length)\n            .map(origCoord => [\n              origCoord[0] * origF + dissapearingNew[0] * newF,\n              origCoord[1] * origF + dissapearingNew[1] * newF,\n            ]);\n          return [...common, ...dissapearing];\n        }\n\n        return common;\n      },\n    };\n  }\n\n  animate(progressAnimation, config) {\n    const {toValue} = config;\n\n    const onAnimationStart = animation => {\n      if (this.coordAnimator) {\n        // there was a started but not finsihed animation\n        const actProgress = this.progressValue.__getValue();\n        this.animation.stop();\n        this.progressValue.setValue(0.0);\n        this.coordinatesArray = this.coordAnimator.calculate(\n          actProgress,\n          this.coordinatesArray,\n        );\n        this.coordAnimator = null;\n        this.animation = null;\n      }\n\n      this.animation = animation;\n      this.coordAnimator = this.createCoordinatesAnimator(\n        toValue,\n        this.coordinatesArray,\n      );\n    };\n\n    const origAnimationStart = progressAnimation.start;\n    const newAnimation = progressAnimation;\n    newAnimation.start = function start(...args) {\n      onAnimationStart(progressAnimation);\n      origAnimationStart(...args);\n    }\n    return newAnimation;\n  }\n\n  timing(config) {\n    return this.animate(\n      Animated.timing(this.progressValue, {...config, toValue: 1.0}),\n      config,\n    );\n  }\n\n  spring(config) {\n    return this.animate(\n      Animated.spring(this.progressValue, {...config, toValue: 1.0}),\n      config,\n    );\n  }\n\n  decay(config) {\n    return this.animate(\n      Animated.decay(this.progressValue, {...config, toValue: 1.0}),\n      config,\n    );\n  }\n\n  __getValue() {\n    if (!this.coordAnimator) {\n      return this.coordinatesArray.map(coord => [coord[0], coord[1]]);\n    }\n    return this.coordAnimator.calculate(\n      this.progressValue.__getValue(),\n      this.coordinatesArray,\n    );\n  }\n}\n\nexport default AnimatedCoordinatesArray;\n"]},"metadata":{},"sourceType":"script"}