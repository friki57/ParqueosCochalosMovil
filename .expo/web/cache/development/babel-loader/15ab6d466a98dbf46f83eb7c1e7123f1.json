{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.normalIcon = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _locationManager = _interopRequireDefault(require(\"../modules/location/locationManager\"));\n\nvar _Annotation = _interopRequireDefault(require(\"./annotations/Annotation\"));\n\nvar _CircleLayer = _interopRequireDefault(require(\"./CircleLayer\"));\n\nvar _jsxFileName = \"/Users/angelaranibar/Erick/ParqueosCochalosMovil-master/Movil/ParqueosCochalos/node_modules/@react-native-mapbox-gl/maps/javascript/components/UserLocation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar mapboxBlue = 'rgba(51, 181, 229, 100)';\nvar layerStyles = {\n  normal: {\n    pluse: {\n      circleRadius: 15,\n      circleColor: mapboxBlue,\n      circleOpacity: 0.2,\n      circlePitchAlignment: 'map'\n    },\n    background: {\n      circleRadius: 9,\n      circleColor: '#fff',\n      circlePitchAlignment: 'map'\n    },\n    foreground: {\n      circleRadius: 6,\n      circleColor: mapboxBlue,\n      circlePitchAlignment: 'map'\n    }\n  }\n};\nvar normalIcon = [_react.default.createElement(_CircleLayer.default, {\n  key: \"mapboxUserLocationPluseCircle\",\n  id: \"mapboxUserLocationPluseCircle\",\n  style: layerStyles.normal.pluse,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}), _react.default.createElement(_CircleLayer.default, {\n  key: \"mapboxUserLocationWhiteCircle\",\n  id: \"mapboxUserLocationWhiteCircle\",\n  style: layerStyles.normal.background,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}), _react.default.createElement(_CircleLayer.default, {\n  key: \"mapboxUserLocationBlueCicle\",\n  id: \"mapboxUserLocationBlueCicle\",\n  aboveLayerID: \"mapboxUserLocationWhiteCircle\",\n  style: layerStyles.normal.foreground,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n})];\nexports.normalIcon = normalIcon;\n\nvar UserLocation = function (_React$Component) {\n  (0, _inherits2.default)(UserLocation, _React$Component);\n\n  var _super = _createSuper(UserLocation);\n\n  function UserLocation(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, UserLocation);\n    _this = _super.call(this, props);\n    _this._isMounted = null;\n    _this.locationManagerRunning = false;\n\n    _this.setLocationManager = function _callee(_ref) {\n      var running, lastKnownLocation;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              running = _ref.running;\n\n              if (!(_this.locationManagerRunning !== running)) {\n                _context.next = 12;\n                break;\n              }\n\n              _this.locationManagerRunning = running;\n\n              if (!running) {\n                _context.next = 11;\n                break;\n              }\n\n              _locationManager.default.start();\n\n              _context.next = 7;\n              return _regenerator.default.awrap(_locationManager.default.getLastKnownLocation());\n\n            case 7:\n              lastKnownLocation = _context.sent;\n\n              if (lastKnownLocation && _this._isMounted) {\n                _this.setState({\n                  coordinates: _this._getCoordinatesFromLocation(lastKnownLocation)\n                });\n              }\n\n              _context.next = 12;\n              break;\n\n            case 11:\n              if (!running) {\n                _locationManager.default.stop();\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      shouldShowUserLocation: false,\n      coordinates: null\n    };\n    _this._onLocationUpdate = _this._onLocationUpdate.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(UserLocation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regenerator.default.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this._isMounted = true;\n\n              _locationManager.default.addListener(this._onLocationUpdate);\n\n              _context2.next = 4;\n              return _regenerator.default.awrap(this.setLocationManager({\n                running: this.needsLocationManagerRunning()\n              }));\n\n            case 4:\n              _locationManager.default.setMinDisplacement(this.props.minDisplacement);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      return _regenerator.default.async(function componentDidUpdate$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regenerator.default.awrap(this.setLocationManager({\n                running: this.needsLocationManagerRunning()\n              }));\n\n            case 2:\n              if (this.props.minDisplacement !== prevProps.minDisplacement) {\n                _locationManager.default.setMinDisplacement(this.props.minDisplacement);\n              }\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      return _regenerator.default.async(function componentWillUnmount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this._isMounted = false;\n\n              _locationManager.default.removeListener(this._onLocationUpdate);\n\n              _context4.next = 4;\n              return _regenerator.default.awrap(this.setLocationManager({\n                running: false\n              }));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"needsLocationManagerRunning\",\n    value: function needsLocationManagerRunning() {\n      return !!this.props.onUpdate || this.props.visible;\n    }\n  }, {\n    key: \"_onLocationUpdate\",\n    value: function _onLocationUpdate(location) {\n      this.setState({\n        coordinates: this._getCoordinatesFromLocation(location)\n      });\n\n      if (this.props.onUpdate) {\n        this.props.onUpdate(location);\n      }\n    }\n  }, {\n    key: \"_getCoordinatesFromLocation\",\n    value: function _getCoordinatesFromLocation(location) {\n      if (!location || !location.coords) {\n        return;\n      }\n\n      return [location.coords.longitude, location.coords.latitude];\n    }\n  }, {\n    key: \"_userIconLayers\",\n    value: function _userIconLayers() {\n      switch (this.props.renderMode) {\n        case UserLocation.RenderMode.Normal:\n          return normalIcon;\n\n        default:\n          return this.props.children;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.visible || !this.state.coordinates) {\n        return null;\n      }\n\n      var children = this.props.children ? this.props.children : this._userIconLayers();\n      return _react.default.createElement(_Annotation.default, {\n        animated: this.props.animated,\n        id: \"mapboxUserLocation\",\n        onPress: this.props.onPress,\n        coordinates: this.state.coordinates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n  return UserLocation;\n}(_react.default.Component);\n\nUserLocation.propTypes = {\n  animated: _propTypes.default.bool,\n  renderMode: _propTypes.default.oneOf(['normal', 'custom']),\n  visible: _propTypes.default.bool,\n  onPress: _propTypes.default.func,\n  onUpdate: _propTypes.default.func,\n  minDisplacement: _propTypes.default.number,\n  children: _propTypes.default.any\n};\nUserLocation.defaultProps = {\n  animated: true,\n  visible: true,\n  minDisplacement: 0,\n  renderMode: 'normal'\n};\nUserLocation.RenderMode = {\n  Normal: 'normal',\n  Custom: 'custom'\n};\nvar _default = UserLocation;\nexports.default = _default;","map":{"version":3,"sources":["/Users/angelaranibar/Erick/ParqueosCochalosMovil-master/Movil/ParqueosCochalos/node_modules/@react-native-mapbox-gl/maps/javascript/components/UserLocation.js"],"names":["mapboxBlue","layerStyles","normal","pluse","circleRadius","circleColor","circleOpacity","circlePitchAlignment","background","foreground","normalIcon","UserLocation","props","_isMounted","locationManagerRunning","setLocationManager","running","locationManager","start","getLastKnownLocation","lastKnownLocation","setState","coordinates","_getCoordinatesFromLocation","stop","state","shouldShowUserLocation","_onLocationUpdate","bind","addListener","needsLocationManagerRunning","setMinDisplacement","minDisplacement","prevProps","removeListener","onUpdate","visible","location","coords","longitude","latitude","renderMode","RenderMode","Normal","children","_userIconLayers","animated","onPress","React","Component","propTypes","PropTypes","bool","oneOf","func","number","any","defaultProps","Custom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport locationManager from '../modules/location/locationManager';\n\nimport Annotation from './annotations/Annotation'; // eslint-disable-line import/no-cycle\nimport CircleLayer from './CircleLayer';\n\nconst mapboxBlue = 'rgba(51, 181, 229, 100)';\n\nconst layerStyles = {\n  normal: {\n    pluse: {\n      circleRadius: 15,\n      circleColor: mapboxBlue,\n      circleOpacity: 0.2,\n      circlePitchAlignment: 'map',\n    },\n    background: {\n      circleRadius: 9,\n      circleColor: '#fff',\n      circlePitchAlignment: 'map',\n    },\n    foreground: {\n      circleRadius: 6,\n      circleColor: mapboxBlue,\n      circlePitchAlignment: 'map',\n    },\n  },\n};\n\nexport const normalIcon = [\n  <CircleLayer\n    key=\"mapboxUserLocationPluseCircle\"\n    id=\"mapboxUserLocationPluseCircle\"\n    style={layerStyles.normal.pluse}\n  />,\n  <CircleLayer\n    key=\"mapboxUserLocationWhiteCircle\"\n    id=\"mapboxUserLocationWhiteCircle\"\n    style={layerStyles.normal.background}\n  />,\n  <CircleLayer\n    key=\"mapboxUserLocationBlueCicle\"\n    id=\"mapboxUserLocationBlueCicle\"\n    aboveLayerID=\"mapboxUserLocationWhiteCircle\"\n    style={layerStyles.normal.foreground}\n  />,\n];\n\nclass UserLocation extends React.Component {\n  static propTypes = {\n    /**\n     * Whether location icon is animated between updates\n     */\n    animated: PropTypes.bool,\n\n    /**\n     * Rendermode of user location icon.\n     * One of `\"normal\"`, `\"custom\"`.\n     * \"custom\" must be of type mapbox-gl-native components\n     */\n    renderMode: PropTypes.oneOf(['normal', 'custom']),\n\n    /**\n     * Whether location icon is visible\n     */\n    visible: PropTypes.bool,\n\n    /**\n     * Callback that is triggered on location icon press\n     */\n    onPress: PropTypes.func,\n\n    /**\n     * Callback that is triggered on location update\n     */\n    onUpdate: PropTypes.func,\n\n    minDisplacement: PropTypes.number,\n\n    /**\n     * Custom location icon of type mapbox-gl-native components\n     */\n    children: PropTypes.any,\n  };\n\n  static defaultProps = {\n    animated: true,\n    visible: true,\n    minDisplacement: 0,\n    renderMode: 'normal',\n  };\n\n  static RenderMode = {\n    Normal: 'normal',\n    Custom: 'custom',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shouldShowUserLocation: false,\n      coordinates: null,\n    };\n\n    this._onLocationUpdate = this._onLocationUpdate.bind(this);\n  }\n\n  // required as #setLocationManager attempts to setState\n  // after component unmount\n  _isMounted = null;\n\n  locationManagerRunning = false;\n\n  async componentDidMount() {\n    this._isMounted = true;\n    locationManager.addListener(this._onLocationUpdate);\n    await this.setLocationManager({\n      running: this.needsLocationManagerRunning(),\n    });\n\n    locationManager.setMinDisplacement(this.props.minDisplacement);\n  }\n\n  async componentDidUpdate(prevProps) {\n    await this.setLocationManager({\n      running: this.needsLocationManagerRunning(),\n    });\n\n    if (this.props.minDisplacement !== prevProps.minDisplacement) {\n      locationManager.setMinDisplacement(this.props.minDisplacement);\n    }\n  }\n\n  async componentWillUnmount() {\n    this._isMounted = false;\n\n    locationManager.removeListener(this._onLocationUpdate);\n    await this.setLocationManager({running: false});\n  }\n\n  /**\n   * Whether to start or stop the locationManager\n   *\n   * Notice, that locationManager will start automatically when\n   * either `onUpdate` or `visible` are set\n   *\n   * @param {Object} running - Object with key `running` and `boolean` value\n   * @return {void}\n   */\n  setLocationManager = async ({running}) => {\n    if (this.locationManagerRunning !== running) {\n      this.locationManagerRunning = running;\n      if (running) {\n        locationManager.start();\n\n        const lastKnownLocation = await locationManager.getLastKnownLocation();\n\n        if (lastKnownLocation && this._isMounted) {\n          this.setState({\n            coordinates: this._getCoordinatesFromLocation(lastKnownLocation),\n          });\n        }\n      } else if (!running) {\n        locationManager.stop();\n      }\n    }\n  };\n\n  /**\n   *\n   * If locationManager should be running\n   *\n   * @return {boolean}\n   */\n  needsLocationManagerRunning() {\n    return !!this.props.onUpdate || this.props.visible;\n  }\n\n  _onLocationUpdate(location) {\n    this.setState({\n      coordinates: this._getCoordinatesFromLocation(location),\n    });\n\n    if (this.props.onUpdate) {\n      this.props.onUpdate(location);\n    }\n  }\n\n  _getCoordinatesFromLocation(location) {\n    if (!location || !location.coords) {\n      return;\n    }\n    return [location.coords.longitude, location.coords.latitude];\n  }\n\n  _userIconLayers() {\n    switch (this.props.renderMode) {\n      case UserLocation.RenderMode.Normal:\n        return normalIcon;\n      default:\n        return this.props.children;\n    }\n  }\n\n  render() {\n    if (!this.props.visible || !this.state.coordinates) {\n      return null;\n    }\n\n    const children = this.props.children\n      ? this.props.children\n      : this._userIconLayers();\n\n    return (\n      <Annotation\n        animated={this.props.animated}\n        id=\"mapboxUserLocation\"\n        onPress={this.props.onPress}\n        coordinates={this.state.coordinates}\n      >\n        {children}\n      </Annotation>\n    );\n  }\n}\n\nexport default UserLocation;\n"]},"metadata":{},"sourceType":"script"}