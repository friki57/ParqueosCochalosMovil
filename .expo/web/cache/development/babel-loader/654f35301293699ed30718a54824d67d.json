{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _resolveAssetSource = _interopRequireDefault(require(\"react-native/Libraries/Image/resolveAssetSource\"));\n\nvar _filterUtils = require(\"../utils/filterUtils\");\n\nvar _styleMap = require(\"../utils/styleMap\");\n\nvar _BridgeValue = _interopRequireDefault(require(\"../utils/BridgeValue\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AbstractLayer = function (_React$PureComponent) {\n  (0, _inherits2.default)(AbstractLayer, _React$PureComponent);\n\n  var _super = _createSuper(AbstractLayer);\n\n  function AbstractLayer() {\n    (0, _classCallCheck2.default)(this, AbstractLayer);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(AbstractLayer, [{\n    key: \"getStyleTypeFormatter\",\n    value: function getStyleTypeFormatter(styleType) {\n      if (styleType === 'color') {\n        return _reactNative.processColor;\n      }\n    }\n  }, {\n    key: \"_getStyle\",\n    value: function _getStyle(style) {\n      if (!style) {\n        return;\n      }\n\n      var nativeStyle = {};\n      var styleProps = Object.keys(style);\n\n      for (var _i = 0, _styleProps = styleProps; _i < _styleProps.length; _i++) {\n        var styleProp = _styleProps[_i];\n        var styleType = (0, _styleMap.getStyleType)(styleProp);\n        var rawStyle = style[styleProp];\n\n        if (styleType === 'color' && typeof rawStyle === 'string') {\n          rawStyle = (0, _reactNative.processColor)(rawStyle);\n        } else if (styleType === 'image' && typeof rawStyle === 'number') {\n          rawStyle = (0, _resolveAssetSource.default)(rawStyle) || {};\n        }\n\n        var bridgeValue = new _BridgeValue.default(rawStyle);\n        nativeStyle[styleProp] = {\n          styletype: styleType,\n          stylevalue: bridgeValue.toJSON()\n        };\n      }\n\n      return nativeStyle;\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      return this._getStyle(this.props.style);\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this.refs.nativeLayer) {\n        var propsToPass = props;\n\n        if (props.style) {\n          propsToPass = _objectSpread({}, props, {\n            reactStyle: this._getStyle(props.style)\n          });\n        }\n\n        this.refs.nativeLayer.setNativeProps(propsToPass);\n      }\n    }\n  }, {\n    key: \"baseProps\",\n    get: function get() {\n      return _objectSpread({}, this.props, {\n        id: this.props.id,\n        sourceID: this.props.sourceID,\n        reactStyle: this.getStyle(),\n        minZoomLevel: this.props.minZoomLevel,\n        maxZoomLevel: this.props.maxZoomLevel,\n        aboveLayerID: this.props.aboveLayerID,\n        belowLayerID: this.props.belowLayerID,\n        layerIndex: this.props.layerIndex,\n        filter: (0, _filterUtils.getFilter)(this.props.filter),\n        style: undefined\n      });\n    }\n  }]);\n  return AbstractLayer;\n}(_react.default.PureComponent);\n\nvar _default = AbstractLayer;\nexports.default = _default;","map":{"version":3,"sources":["/Users/angelaranibar/Erick/ParqueosCochalosMovil-master/Movil/ParqueosCochalos/node_modules/@react-native-mapbox-gl/maps/javascript/components/AbstractLayer.js"],"names":["AbstractLayer","styleType","processColor","style","nativeStyle","styleProps","Object","keys","styleProp","rawStyle","bridgeValue","BridgeValue","styletype","stylevalue","toJSON","_getStyle","props","refs","nativeLayer","propsToPass","reactStyle","setNativeProps","id","sourceID","getStyle","minZoomLevel","maxZoomLevel","aboveLayerID","belowLayerID","layerIndex","filter","undefined","React","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;IAEMA,a;;;;;;;;;;;;0CAiBkBC,S,EAAW;AAC/B,UAAIA,SAAS,KAAK,OAAlB,EAA2B;AACzB,eAAOC,yBAAP;AACD;AACF;;;8BAESC,K,EAAO;AACf,UAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAnB;;AACA,qCAAwBE,UAAxB,iCAAoC;AAA/B,YAAMG,SAAS,kBAAf;AACH,YAAMP,SAAS,GAAG,4BAAaO,SAAb,CAAlB;AACA,YAAIC,QAAQ,GAAGN,KAAK,CAACK,SAAD,CAApB;;AAEA,YAAIP,SAAS,KAAK,OAAd,IAAyB,OAAOQ,QAAP,KAAoB,QAAjD,EAA2D;AACzDA,UAAAA,QAAQ,GAAG,+BAAaA,QAAb,CAAX;AACD,SAFD,MAEO,IAAIR,SAAS,KAAK,OAAd,IAAyB,OAAOQ,QAAP,KAAoB,QAAjD,EAA2D;AAChEA,UAAAA,QAAQ,GAAG,iCAAmBA,QAAnB,KAAgC,EAA3C;AACD;;AAED,YAAMC,WAAW,GAAG,IAAIC,oBAAJ,CAAgBF,QAAhB,CAApB;AACAL,QAAAA,WAAW,CAACI,SAAD,CAAX,GAAyB;AACvBI,UAAAA,SAAS,EAAEX,SADY;AAEvBY,UAAAA,UAAU,EAAEH,WAAW,CAACI,MAAZ;AAFW,SAAzB;AAID;;AAED,aAAOV,WAAP;AACD;;;+BAEU;AACT,aAAO,KAAKW,SAAL,CAAe,KAAKC,KAAL,CAAWb,KAA1B,CAAP;AACD;;;mCAEca,K,EAAO;AACpB,UAAI,KAAKC,IAAL,CAAUC,WAAd,EAA2B;AACzB,YAAIC,WAAW,GAAGH,KAAlB;;AACA,YAAIA,KAAK,CAACb,KAAV,EAAiB;AACfgB,UAAAA,WAAW,qBAAOH,KAAP;AAAcI,YAAAA,UAAU,EAAE,KAAKL,SAAL,CAAeC,KAAK,CAACb,KAArB;AAA1B,YAAX;AACD;;AACD,aAAKc,IAAL,CAAUC,WAAV,CAAsBG,cAAtB,CAAqCF,WAArC;AACD;AACF;;;wBA7De;AACd,+BACK,KAAKH,KADV;AAEEM,QAAAA,EAAE,EAAE,KAAKN,KAAL,CAAWM,EAFjB;AAGEC,QAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QAHvB;AAIEH,QAAAA,UAAU,EAAE,KAAKI,QAAL,EAJd;AAKEC,QAAAA,YAAY,EAAE,KAAKT,KAAL,CAAWS,YAL3B;AAMEC,QAAAA,YAAY,EAAE,KAAKV,KAAL,CAAWU,YAN3B;AAOEC,QAAAA,YAAY,EAAE,KAAKX,KAAL,CAAWW,YAP3B;AAQEC,QAAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWY,YAR3B;AASEC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa,UATzB;AAUEC,QAAAA,MAAM,EAAE,4BAAU,KAAKd,KAAL,CAAWc,MAArB,CAVV;AAWE3B,QAAAA,KAAK,EAAE4B;AAXT;AAaD;;;EAfyBC,eAAMC,a;;eAiEnBjC,a","sourcesContent":["/* eslint react/prop-types:0  */\nimport React from 'react';\nimport {processColor} from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\n\nimport {getFilter} from '../utils/filterUtils';\nimport {getStyleType} from '../utils/styleMap';\nimport BridgeValue from '../utils/BridgeValue';\n\nclass AbstractLayer extends React.PureComponent {\n  get baseProps() {\n    return {\n      ...this.props,\n      id: this.props.id,\n      sourceID: this.props.sourceID,\n      reactStyle: this.getStyle(),\n      minZoomLevel: this.props.minZoomLevel,\n      maxZoomLevel: this.props.maxZoomLevel,\n      aboveLayerID: this.props.aboveLayerID,\n      belowLayerID: this.props.belowLayerID,\n      layerIndex: this.props.layerIndex,\n      filter: getFilter(this.props.filter),\n      style: undefined,\n    };\n  }\n\n  getStyleTypeFormatter(styleType) {\n    if (styleType === 'color') {\n      return processColor;\n    }\n  }\n\n  _getStyle(style) {\n    if (!style) {\n      return;\n    }\n\n    const nativeStyle = {};\n    const styleProps = Object.keys(style);\n    for (const styleProp of styleProps) {\n      const styleType = getStyleType(styleProp);\n      let rawStyle = style[styleProp];\n\n      if (styleType === 'color' && typeof rawStyle === 'string') {\n        rawStyle = processColor(rawStyle);\n      } else if (styleType === 'image' && typeof rawStyle === 'number') {\n        rawStyle = resolveAssetSource(rawStyle) || {};\n      }\n\n      const bridgeValue = new BridgeValue(rawStyle);\n      nativeStyle[styleProp] = {\n        styletype: styleType,\n        stylevalue: bridgeValue.toJSON(),\n      };\n    }\n\n    return nativeStyle;\n  }\n\n  getStyle() {\n    return this._getStyle(this.props.style);\n  }\n\n  setNativeProps(props) {\n    if (this.refs.nativeLayer) {\n      let propsToPass = props;\n      if (props.style) {\n        propsToPass = {...props, reactStyle: this._getStyle(props.style)};\n      }\n      this.refs.nativeLayer.setNativeProps(propsToPass);\n    }\n  }\n}\n\nexport default AbstractLayer;\n"]},"metadata":{},"sourceType":"script"}