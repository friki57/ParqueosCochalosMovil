{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.NATIVE_MODULE_NAME = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _resolveAssetSource = _interopRequireDefault(require(\"react-native/Libraries/Image/resolveAssetSource\"));\n\nvar _utils = require(\"../utils\");\n\nvar _ShapeSource = _interopRequireDefault(require(\"./ShapeSource\"));\n\nvar _jsxFileName = \"/Users/angelaranibar/Erick/ParqueosCochalosMovil-master/Movil/ParqueosCochalos/node_modules/@react-native-mapbox-gl/maps/javascript/components/Images.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NATIVE_MODULE_NAME = 'RCTMGLImages';\nexports.NATIVE_MODULE_NAME = NATIVE_MODULE_NAME;\n\nvar Images = function (_React$Component) {\n  (0, _inherits2.default)(Images, _React$Component);\n\n  var _super = _createSuper(Images);\n\n  function Images() {\n    (0, _classCallCheck2.default)(this, Images);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Images, [{\n    key: \"_getImages\",\n    value: function _getImages() {\n      if (!this.props.images) {\n        return {};\n      }\n\n      var images = {};\n      var nativeImages = [];\n      var imageNames = Object.keys(this.props.images);\n\n      for (var _i = 0, _imageNames = imageNames; _i < _imageNames.length; _i++) {\n        var imageName = _imageNames[_i];\n\n        if (imageName === _ShapeSource.default.NATIVE_ASSETS_KEY && Array.isArray(this.props.images[Images.NATIVE_ASSETS_KEY])) {\n          nativeImages = this.props.images[Images.NATIVE_ASSETS_KEY];\n        } else {\n          var res = (0, _resolveAssetSource.default)(this.props.images[imageName]);\n\n          if (res && res.uri) {\n            images[imageName] = res;\n          }\n        }\n      }\n\n      return {\n        images: images,\n        nativeImages: nativeImages\n      };\n    }\n  }, {\n    key: \"_onImageMissing\",\n    value: function _onImageMissing(event) {\n      if (this.props.onImageMissing) {\n        this.props.onImageMissing(event.nativeEvent.payload.imageKey);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _objectSpread({\n        id: this.props.id,\n        hasOnImageMissing: !!this.props.onImageMissing,\n        onImageMissing: this._onImageMissing.bind(this)\n      }, this._getImages());\n\n      return _react.default.createElement(RCTMGLImages, (0, _extends2.default)({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 12\n        }\n      }), this.props.children);\n    }\n  }]);\n  return Images;\n}(_react.default.Component);\n\nImages.NATIVE_ASSETS_KEY = 'assets';\nImages.propTypes = _objectSpread({}, _utils.viewPropTypes, {\n  images: _propTypes.default.object,\n  onImageMissing: _propTypes.default.func\n});\nvar RCTMGLImages = (0, _reactNative.requireNativeComponent)(NATIVE_MODULE_NAME, Images, {\n  nativeOnly: {\n    nativeImages: true,\n    onImageMissing: true\n  }\n});\nvar _default = Images;\nexports.default = _default;","map":{"version":3,"sources":["/Users/angelaranibar/Erick/ParqueosCochalosMovil-master/Movil/ParqueosCochalos/node_modules/@react-native-mapbox-gl/maps/javascript/components/Images.js"],"names":["NATIVE_MODULE_NAME","Images","props","images","nativeImages","imageNames","Object","keys","imageName","ShapeSource","NATIVE_ASSETS_KEY","Array","isArray","res","uri","event","onImageMissing","nativeEvent","payload","imageKey","id","hasOnImageMissing","_onImageMissing","bind","_getImages","children","React","Component","propTypes","viewPropTypes","PropTypes","object","func","RCTMGLImages","nativeOnly"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;AAEO,IAAMA,kBAAkB,GAAG,cAA3B;;;IAKDC,M;;;;;;;;;;;;iCAoBS;AACX,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB;AACtB,eAAO,EAAP;AACD;;AAED,UAAMA,MAAM,GAAG,EAAf;AACA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAL,CAAWC,MAAvB,CAAnB;;AACA,qCAAwBE,UAAxB,iCAAoC;AAA/B,YAAMG,SAAS,kBAAf;;AACH,YACEA,SAAS,KAAKC,qBAAYC,iBAA1B,IACAC,KAAK,CAACC,OAAN,CAAc,KAAKV,KAAL,CAAWC,MAAX,CAAkBF,MAAM,CAACS,iBAAzB,CAAd,CAFF,EAGE;AACAN,UAAAA,YAAY,GAAG,KAAKF,KAAL,CAAWC,MAAX,CAAkBF,MAAM,CAACS,iBAAzB,CAAf;AACD,SALD,MAKO;AACL,cAAMG,GAAG,GAAG,iCAAmB,KAAKX,KAAL,CAAWC,MAAX,CAAkBK,SAAlB,CAAnB,CAAZ;;AACA,cAAIK,GAAG,IAAIA,GAAG,CAACC,GAAf,EAAoB;AAClBX,YAAAA,MAAM,CAACK,SAAD,CAAN,GAAoBK,GAApB;AACD;AACF;AACF;;AAED,aAAO;AACLV,QAAAA,MAAM,EAANA,MADK;AAELC,QAAAA,YAAY,EAAZA;AAFK,OAAP;AAID;;;oCAEeW,K,EAAO;AACrB,UAAI,KAAKb,KAAL,CAAWc,cAAf,EAA+B;AAC7B,aAAKd,KAAL,CAAWc,cAAX,CAA0BD,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0BC,QAApD;AACD;AACF;;;6BAEQ;AACP,UAAMjB,KAAK;AACTkB,QAAAA,EAAE,EAAE,KAAKlB,KAAL,CAAWkB,EADN;AAETC,QAAAA,iBAAiB,EAAE,CAAC,CAAC,KAAKnB,KAAL,CAAWc,cAFvB;AAGTA,QAAAA,cAAc,EAAE,KAAKM,eAAL,CAAqBC,IAArB,CAA0B,IAA1B;AAHP,SAIN,KAAKC,UAAL,EAJM,CAAX;;AAOA,aAAO,6BAAC,YAAD,6BAAkBtB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0B,KAAKA,KAAL,CAAWuB,QAArC,CAAP;AACD;;;EAhEkBC,eAAMC,S;;AAArB1B,M,CACGS,iB,GAAoB,Q;AADvBT,M,CAGG2B,S,qBACFC,oB;AAOH1B,EAAAA,MAAM,EAAE2B,mBAAUC,M;AAMlBf,EAAAA,cAAc,EAAEc,mBAAUE;;AAkD9B,IAAMC,YAAY,GAAG,yCAAuBjC,kBAAvB,EAA2CC,MAA3C,EAAmD;AACtEiC,EAAAA,UAAU,EAAE;AACV9B,IAAAA,YAAY,EAAE,IADJ;AAEVY,IAAAA,cAAc,EAAE;AAFN;AAD0D,CAAnD,CAArB;eAOef,M","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {requireNativeComponent} from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\n\nimport {viewPropTypes} from '../utils';\n\nimport ShapeSource from './ShapeSource';\n\nexport const NATIVE_MODULE_NAME = 'RCTMGLImages';\n\n/**\n * Images defines the images used in Symbol etc layers\n */\nclass Images extends React.Component {\n  static NATIVE_ASSETS_KEY = 'assets';\n\n  static propTypes = {\n    ...viewPropTypes,\n\n    /**\n     * Specifies the external images in key-value pairs required for the shape source.\n     * If you have an asset under Image.xcassets on iOS and the drawables directory on android\n     * you can specify an array of string names with assets as the key `{ assets: ['pin'] }`.\n     */\n    images: PropTypes.object,\n\n    /**\n     * Gets called when a Layer is trying to render an image whose key is not present in\n     * any of the `Images` component of the Map.\n     */\n    onImageMissing: PropTypes.func,\n  };\n\n  _getImages() {\n    if (!this.props.images) {\n      return {};\n    }\n\n    const images = {};\n    let nativeImages = [];\n\n    const imageNames = Object.keys(this.props.images);\n    for (const imageName of imageNames) {\n      if (\n        imageName === ShapeSource.NATIVE_ASSETS_KEY &&\n        Array.isArray(this.props.images[Images.NATIVE_ASSETS_KEY])\n      ) {\n        nativeImages = this.props.images[Images.NATIVE_ASSETS_KEY];\n      } else {\n        const res = resolveAssetSource(this.props.images[imageName]);\n        if (res && res.uri) {\n          images[imageName] = res;\n        }\n      }\n    }\n\n    return {\n      images,\n      nativeImages,\n    };\n  }\n\n  _onImageMissing(event) {\n    if (this.props.onImageMissing) {\n      this.props.onImageMissing(event.nativeEvent.payload.imageKey);\n    }\n  }\n\n  render() {\n    const props = {\n      id: this.props.id,\n      hasOnImageMissing: !!this.props.onImageMissing,\n      onImageMissing: this._onImageMissing.bind(this),\n      ...this._getImages(),\n    };\n\n    return <RCTMGLImages {...props}>{this.props.children}</RCTMGLImages>;\n  }\n}\n\nconst RCTMGLImages = requireNativeComponent(NATIVE_MODULE_NAME, Images, {\n  nativeOnly: {\n    nativeImages: true,\n    onImageMissing: true,\n  },\n});\n\nexport default Images;\n"]},"metadata":{},"sourceType":"script"}