{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MapView\", {\n  enumerable: true,\n  get: function get() {\n    return _MapView.default;\n  }\n});\nObject.defineProperty(exports, \"Light\", {\n  enumerable: true,\n  get: function get() {\n    return _Light.default;\n  }\n});\nObject.defineProperty(exports, \"PointAnnotation\", {\n  enumerable: true,\n  get: function get() {\n    return _PointAnnotation.default;\n  }\n});\nObject.defineProperty(exports, \"Annotation\", {\n  enumerable: true,\n  get: function get() {\n    return _Annotation.default;\n  }\n});\nObject.defineProperty(exports, \"Callout\", {\n  enumerable: true,\n  get: function get() {\n    return _Callout.default;\n  }\n});\nObject.defineProperty(exports, \"UserLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _UserLocation.default;\n  }\n});\nObject.defineProperty(exports, \"Camera\", {\n  enumerable: true,\n  get: function get() {\n    return _Camera.default;\n  }\n});\nObject.defineProperty(exports, \"VectorSource\", {\n  enumerable: true,\n  get: function get() {\n    return _VectorSource.default;\n  }\n});\nObject.defineProperty(exports, \"ShapeSource\", {\n  enumerable: true,\n  get: function get() {\n    return _ShapeSource.default;\n  }\n});\nObject.defineProperty(exports, \"RasterSource\", {\n  enumerable: true,\n  get: function get() {\n    return _RasterSource.default;\n  }\n});\nObject.defineProperty(exports, \"ImageSource\", {\n  enumerable: true,\n  get: function get() {\n    return _ImageSource.default;\n  }\n});\nObject.defineProperty(exports, \"Images\", {\n  enumerable: true,\n  get: function get() {\n    return _Images.default;\n  }\n});\nObject.defineProperty(exports, \"FillLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _FillLayer.default;\n  }\n});\nObject.defineProperty(exports, \"FillExtrusionLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _FillExtrusionLayer.default;\n  }\n});\nObject.defineProperty(exports, \"HeatmapLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _HeatmapLayer.default;\n  }\n});\nObject.defineProperty(exports, \"LineLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _LineLayer.default;\n  }\n});\nObject.defineProperty(exports, \"CircleLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _CircleLayer.default;\n  }\n});\nObject.defineProperty(exports, \"SymbolLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _SymbolLayer.default;\n  }\n});\nObject.defineProperty(exports, \"RasterLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _RasterLayer.default;\n  }\n});\nObject.defineProperty(exports, \"BackgroundLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _BackgroundLayer.default;\n  }\n});\nObject.defineProperty(exports, \"locationManager\", {\n  enumerable: true,\n  get: function get() {\n    return _locationManager.default;\n  }\n});\nObject.defineProperty(exports, \"offlineManager\", {\n  enumerable: true,\n  get: function get() {\n    return _offlineManager.default;\n  }\n});\nObject.defineProperty(exports, \"snapshotManager\", {\n  enumerable: true,\n  get: function get() {\n    return _snapshotManager.default;\n  }\n});\nObject.defineProperty(exports, \"MarkerView\", {\n  enumerable: true,\n  get: function get() {\n    return _MarkerView.default;\n  }\n});\nObject.defineProperty(exports, \"AnimatedMapPoint\", {\n  enumerable: true,\n  get: function get() {\n    return _AnimatedPoint.default;\n  }\n});\nObject.defineProperty(exports, \"AnimatedShape\", {\n  enumerable: true,\n  get: function get() {\n    return _AnimatedShape.default;\n  }\n});\nObject.defineProperty(exports, \"AnimatedCoordinatesArray\", {\n  enumerable: true,\n  get: function get() {\n    return _AnimatedCoordinatesArray.default;\n  }\n});\nexports.default = exports.LineJoin = exports.Animated = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _utils = require(\"./utils\");\n\nvar _MapView = _interopRequireDefault(require(\"./components/MapView\"));\n\nvar _Light = _interopRequireDefault(require(\"./components/Light\"));\n\nvar _PointAnnotation = _interopRequireDefault(require(\"./components/PointAnnotation\"));\n\nvar _Annotation = _interopRequireDefault(require(\"./components/annotations/Annotation\"));\n\nvar _Callout = _interopRequireDefault(require(\"./components/Callout\"));\n\nvar _UserLocation = _interopRequireDefault(require(\"./components/UserLocation\"));\n\nvar _Camera = _interopRequireDefault(require(\"./components/Camera\"));\n\nvar _VectorSource = _interopRequireDefault(require(\"./components/VectorSource\"));\n\nvar _ShapeSource = _interopRequireDefault(require(\"./components/ShapeSource\"));\n\nvar _RasterSource = _interopRequireDefault(require(\"./components/RasterSource\"));\n\nvar _ImageSource = _interopRequireDefault(require(\"./components/ImageSource\"));\n\nvar _Images = _interopRequireDefault(require(\"./components/Images\"));\n\nvar _FillLayer = _interopRequireDefault(require(\"./components/FillLayer\"));\n\nvar _FillExtrusionLayer = _interopRequireDefault(require(\"./components/FillExtrusionLayer\"));\n\nvar _HeatmapLayer = _interopRequireDefault(require(\"./components/HeatmapLayer\"));\n\nvar _LineLayer = _interopRequireDefault(require(\"./components/LineLayer\"));\n\nvar _CircleLayer = _interopRequireDefault(require(\"./components/CircleLayer\"));\n\nvar _SymbolLayer = _interopRequireDefault(require(\"./components/SymbolLayer\"));\n\nvar _RasterLayer = _interopRequireDefault(require(\"./components/RasterLayer\"));\n\nvar _BackgroundLayer = _interopRequireDefault(require(\"./components/BackgroundLayer\"));\n\nvar _locationManager = _interopRequireDefault(require(\"./modules/location/locationManager\"));\n\nvar _offlineManager = _interopRequireDefault(require(\"./modules/offline/offlineManager\"));\n\nvar _snapshotManager = _interopRequireDefault(require(\"./modules/snapshot/snapshotManager\"));\n\nvar _MarkerView = _interopRequireDefault(require(\"./components/MarkerView\"));\n\nvar _AnimatedPoint = _interopRequireDefault(require(\"./utils/animated/AnimatedPoint\"));\n\nvar _AnimatedShape = _interopRequireDefault(require(\"./utils/animated/AnimatedShape\"));\n\nvar _AnimatedCoordinatesArray = _interopRequireDefault(require(\"./utils/animated/AnimatedCoordinatesArray\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar MapboxGL = _objectSpread({}, _reactNative.NativeModules.MGLModule);\n\nMapboxGL.requestAndroidLocationPermissions = function _callee() {\n  var res, permissions, _i, _permissions, permission;\n\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(0, _utils.isAndroid)()) {\n            _context.next = 16;\n            break;\n          }\n\n          _context.next = 3;\n          return _regenerator.default.awrap(_reactNative.PermissionsAndroid.requestMultiple([_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, _reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION]));\n\n        case 3:\n          res = _context.sent;\n\n          if (res) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", false);\n\n        case 6:\n          permissions = Object.keys(res);\n          _i = 0, _permissions = permissions;\n\n        case 8:\n          if (!(_i < _permissions.length)) {\n            _context.next = 15;\n            break;\n          }\n\n          permission = _permissions[_i];\n\n          if (!(res[permission] === _reactNative.PermissionsAndroid.RESULTS.GRANTED)) {\n            _context.next = 12;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 12:\n          _i++;\n          _context.next = 8;\n          break;\n\n        case 15:\n          return _context.abrupt(\"return\", false);\n\n        case 16:\n          throw new Error('You should only call this method on Android!');\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nMapboxGL.UserTrackingModes = _Camera.default.UserTrackingModes;\nMapboxGL.MapView = _MapView.default;\nMapboxGL.Light = _Light.default;\nMapboxGL.PointAnnotation = _PointAnnotation.default;\nMapboxGL.Callout = _Callout.default;\nMapboxGL.UserLocation = _UserLocation.default;\nMapboxGL.Camera = _Camera.default;\nMapboxGL.Annotation = _Annotation.default;\nMapboxGL.MarkerView = _MarkerView.default;\nMapboxGL.VectorSource = _VectorSource.default;\nMapboxGL.ShapeSource = _ShapeSource.default;\nMapboxGL.RasterSource = _RasterSource.default;\nMapboxGL.ImageSource = _ImageSource.default;\nMapboxGL.Images = _Images.default;\nMapboxGL.FillLayer = _FillLayer.default;\nMapboxGL.FillExtrusionLayer = _FillExtrusionLayer.default;\nMapboxGL.HeatmapLayer = _HeatmapLayer.default;\nMapboxGL.LineLayer = _LineLayer.default;\nMapboxGL.CircleLayer = _CircleLayer.default;\nMapboxGL.SymbolLayer = _SymbolLayer.default;\nMapboxGL.RasterLayer = _RasterLayer.default;\nMapboxGL.BackgroundLayer = _BackgroundLayer.default;\nMapboxGL.locationManager = _locationManager.default;\nMapboxGL.offlineManager = _offlineManager.default;\nMapboxGL.snapshotManager = _snapshotManager.default;\nMapboxGL.AnimatedPoint = _AnimatedPoint.default;\nMapboxGL.AnimatedCoordinatesArray = _AnimatedCoordinatesArray.default;\nMapboxGL.AnimatedShape = _AnimatedShape.default;\nvar Animated = {\n  ShapeSource: _reactNative.Animated.createAnimatedComponent(_ShapeSource.default),\n  ImageSource: _reactNative.Animated.createAnimatedComponent(_ImageSource.default),\n  FillLayer: _reactNative.Animated.createAnimatedComponent(_FillLayer.default),\n  FillExtrusionLayer: _reactNative.Animated.createAnimatedComponent(_FillExtrusionLayer.default),\n  LineLayer: _reactNative.Animated.createAnimatedComponent(_LineLayer.default),\n  CircleLayer: _reactNative.Animated.createAnimatedComponent(_CircleLayer.default),\n  SymbolLayer: _reactNative.Animated.createAnimatedComponent(_SymbolLayer.default),\n  RasterLayer: _reactNative.Animated.createAnimatedComponent(_RasterLayer.default),\n  BackgroundLayer: _reactNative.Animated.createAnimatedComponent(_BackgroundLayer.default),\n  CoordinatesArray: _AnimatedCoordinatesArray.default,\n  Shape: _AnimatedShape.default\n};\nexports.Animated = Animated;\nMapboxGL.Animated = Animated;\nvar LineJoin = MapboxGL.LineJoin;\nexports.LineJoin = LineJoin;\nvar _default = MapboxGL;\nexports.default = _default;","map":{"version":3,"sources":["/Users/angelaranibar/Erick/ParqueosCochalosMovil-master/Movil/ParqueosCochalos/node_modules/@react-native-mapbox-gl/maps/javascript/index.js"],"names":["MapboxGL","NativeModules","MGLModule","requestAndroidLocationPermissions","PermissionsAndroid","requestMultiple","PERMISSIONS","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","res","permissions","Object","keys","permission","RESULTS","GRANTED","Error","UserTrackingModes","Camera","MapView","Light","PointAnnotation","Callout","UserLocation","Annotation","MarkerView","VectorSource","ShapeSource","RasterSource","ImageSource","Images","FillLayer","FillExtrusionLayer","HeatmapLayer","LineLayer","CircleLayer","SymbolLayer","RasterLayer","BackgroundLayer","locationManager","offlineManager","snapshotManager","AnimatedPoint","AnimatedMapPoint","AnimatedCoordinatesArray","AnimatedShape","Animated","RNAnimated","createAnimatedComponent","CoordinatesArray","Shape","LineJoin"],"mappings":"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","sourcesContent":["import {\n  Animated as RNAnimated,\n  NativeModules,\n  PermissionsAndroid,\n} from 'react-native';\n\nimport {isAndroid} from './utils';\nimport MapView from './components/MapView';\nimport Light from './components/Light';\nimport PointAnnotation from './components/PointAnnotation';\nimport Annotation from './components/annotations/Annotation'; // eslint-disable-line import/no-cycle\nimport Callout from './components/Callout';\nimport UserLocation from './components/UserLocation'; // eslint-disable-line import/no-cycle\nimport Camera from './components/Camera';\nimport VectorSource from './components/VectorSource';\nimport ShapeSource from './components/ShapeSource';\nimport RasterSource from './components/RasterSource';\nimport ImageSource from './components/ImageSource';\nimport Images from './components/Images';\nimport FillLayer from './components/FillLayer';\nimport FillExtrusionLayer from './components/FillExtrusionLayer';\nimport HeatmapLayer from './components/HeatmapLayer';\nimport LineLayer from './components/LineLayer';\nimport CircleLayer from './components/CircleLayer';\nimport SymbolLayer from './components/SymbolLayer';\nimport RasterLayer from './components/RasterLayer';\nimport BackgroundLayer from './components/BackgroundLayer';\nimport locationManager from './modules/location/locationManager';\nimport offlineManager from './modules/offline/offlineManager';\nimport snapshotManager from './modules/snapshot/snapshotManager';\nimport MarkerView from './components/MarkerView';\nimport AnimatedMapPoint from './utils/animated/AnimatedPoint';\nimport AnimatedShape from './utils/animated/AnimatedShape';\nimport AnimatedCoordinatesArray from './utils/animated/AnimatedCoordinatesArray';\n\nconst MapboxGL = {...NativeModules.MGLModule};\n\n// static methods\nMapboxGL.requestAndroidLocationPermissions = async function() {\n  if (isAndroid()) {\n    const res = await PermissionsAndroid.requestMultiple([\n      PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n      PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION,\n    ]);\n\n    if (!res) {\n      return false;\n    }\n\n    const permissions = Object.keys(res);\n    for (const permission of permissions) {\n      if (res[permission] === PermissionsAndroid.RESULTS.GRANTED) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error('You should only call this method on Android!');\n};\n\nMapboxGL.UserTrackingModes = Camera.UserTrackingModes;\n\n// components\nMapboxGL.MapView = MapView;\nMapboxGL.Light = Light;\nMapboxGL.PointAnnotation = PointAnnotation;\nMapboxGL.Callout = Callout;\nMapboxGL.UserLocation = UserLocation;\nMapboxGL.Camera = Camera;\n\n// annotations\nMapboxGL.Annotation = Annotation;\nMapboxGL.MarkerView = MarkerView;\n\n// sources\nMapboxGL.VectorSource = VectorSource;\nMapboxGL.ShapeSource = ShapeSource;\nMapboxGL.RasterSource = RasterSource;\nMapboxGL.ImageSource = ImageSource;\nMapboxGL.Images = Images;\n\n// layers\nMapboxGL.FillLayer = FillLayer;\nMapboxGL.FillExtrusionLayer = FillExtrusionLayer;\nMapboxGL.HeatmapLayer = HeatmapLayer;\nMapboxGL.LineLayer = LineLayer;\nMapboxGL.CircleLayer = CircleLayer;\nMapboxGL.SymbolLayer = SymbolLayer;\nMapboxGL.RasterLayer = RasterLayer;\nMapboxGL.BackgroundLayer = BackgroundLayer;\n\n// modules\nMapboxGL.locationManager = locationManager;\nMapboxGL.offlineManager = offlineManager;\nMapboxGL.snapshotManager = snapshotManager;\n\n// utils\nMapboxGL.AnimatedPoint = AnimatedMapPoint;\nMapboxGL.AnimatedCoordinatesArray = AnimatedCoordinatesArray;\nMapboxGL.AnimatedShape = AnimatedShape;\n\n// animated\nconst Animated = {\n  // sources\n  ShapeSource: RNAnimated.createAnimatedComponent(ShapeSource),\n  ImageSource: RNAnimated.createAnimatedComponent(ImageSource),\n\n  // layers\n  FillLayer: RNAnimated.createAnimatedComponent(FillLayer),\n  FillExtrusionLayer: RNAnimated.createAnimatedComponent(FillExtrusionLayer),\n  LineLayer: RNAnimated.createAnimatedComponent(LineLayer),\n  CircleLayer: RNAnimated.createAnimatedComponent(CircleLayer),\n  SymbolLayer: RNAnimated.createAnimatedComponent(SymbolLayer),\n  RasterLayer: RNAnimated.createAnimatedComponent(RasterLayer),\n  BackgroundLayer: RNAnimated.createAnimatedComponent(BackgroundLayer),\n\n  // values\n  CoordinatesArray: AnimatedCoordinatesArray,\n  Shape: AnimatedShape,\n};\n\nMapboxGL.Animated = Animated;\n\nconst {LineJoin} = MapboxGL;\n\nexport {\n  MapView,\n  Light,\n  PointAnnotation,\n  Callout,\n  UserLocation,\n  Camera,\n  Annotation,\n  MarkerView,\n  VectorSource,\n  ShapeSource,\n  RasterSource,\n  ImageSource,\n  Images,\n  FillLayer,\n  FillExtrusionLayer,\n  HeatmapLayer,\n  LineLayer,\n  CircleLayer,\n  SymbolLayer,\n  RasterLayer,\n  BackgroundLayer,\n  locationManager,\n  offlineManager,\n  snapshotManager,\n  AnimatedMapPoint,\n  AnimatedCoordinatesArray,\n  AnimatedShape,\n  Animated,\n  LineJoin,\n};\n\nexport default MapboxGL;\n"]},"metadata":{},"sourceType":"script"}